package com.yy.baby.fighting.entity;

import java.util.ArrayList;
import java.util.List;

public class MasterBabyCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    protected Integer limitStart;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    protected Integer limitEnd;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    public MasterBabyCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    public void setLimitStart(Integer limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    public Integer getLimitStart() {
        return limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    public void setLimitEnd(Integer limitEnd) {
        this.limitEnd=limitEnd;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    public Integer getLimitEnd() {
        return limitEnd;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andMasterUidIsNull() {
            addCriterion("masterUid is null");
            return (Criteria) this;
        }

        public Criteria andMasterUidIsNotNull() {
            addCriterion("masterUid is not null");
            return (Criteria) this;
        }

        public Criteria andMasterUidEqualTo(Long value) {
            addCriterion("masterUid =", value, "masterUid");
            return (Criteria) this;
        }

        public Criteria andMasterUidNotEqualTo(Long value) {
            addCriterion("masterUid <>", value, "masterUid");
            return (Criteria) this;
        }

        public Criteria andMasterUidGreaterThan(Long value) {
            addCriterion("masterUid >", value, "masterUid");
            return (Criteria) this;
        }

        public Criteria andMasterUidGreaterThanOrEqualTo(Long value) {
            addCriterion("masterUid >=", value, "masterUid");
            return (Criteria) this;
        }

        public Criteria andMasterUidLessThan(Long value) {
            addCriterion("masterUid <", value, "masterUid");
            return (Criteria) this;
        }

        public Criteria andMasterUidLessThanOrEqualTo(Long value) {
            addCriterion("masterUid <=", value, "masterUid");
            return (Criteria) this;
        }

        public Criteria andMasterUidIn(List<Long> values) {
            addCriterion("masterUid in", values, "masterUid");
            return (Criteria) this;
        }

        public Criteria andMasterUidNotIn(List<Long> values) {
            addCriterion("masterUid not in", values, "masterUid");
            return (Criteria) this;
        }

        public Criteria andMasterUidBetween(Long value1, Long value2) {
            addCriterion("masterUid between", value1, value2, "masterUid");
            return (Criteria) this;
        }

        public Criteria andMasterUidNotBetween(Long value1, Long value2) {
            addCriterion("masterUid not between", value1, value2, "masterUid");
            return (Criteria) this;
        }

        public Criteria andBabyUidIsNull() {
            addCriterion("babyUid is null");
            return (Criteria) this;
        }

        public Criteria andBabyUidIsNotNull() {
            addCriterion("babyUid is not null");
            return (Criteria) this;
        }

        public Criteria andBabyUidEqualTo(Long value) {
            addCriterion("babyUid =", value, "babyUid");
            return (Criteria) this;
        }

        public Criteria andBabyUidNotEqualTo(Long value) {
            addCriterion("babyUid <>", value, "babyUid");
            return (Criteria) this;
        }

        public Criteria andBabyUidGreaterThan(Long value) {
            addCriterion("babyUid >", value, "babyUid");
            return (Criteria) this;
        }

        public Criteria andBabyUidGreaterThanOrEqualTo(Long value) {
            addCriterion("babyUid >=", value, "babyUid");
            return (Criteria) this;
        }

        public Criteria andBabyUidLessThan(Long value) {
            addCriterion("babyUid <", value, "babyUid");
            return (Criteria) this;
        }

        public Criteria andBabyUidLessThanOrEqualTo(Long value) {
            addCriterion("babyUid <=", value, "babyUid");
            return (Criteria) this;
        }

        public Criteria andBabyUidIn(List<Long> values) {
            addCriterion("babyUid in", values, "babyUid");
            return (Criteria) this;
        }

        public Criteria andBabyUidNotIn(List<Long> values) {
            addCriterion("babyUid not in", values, "babyUid");
            return (Criteria) this;
        }

        public Criteria andBabyUidBetween(Long value1, Long value2) {
            addCriterion("babyUid between", value1, value2, "babyUid");
            return (Criteria) this;
        }

        public Criteria andBabyUidNotBetween(Long value1, Long value2) {
            addCriterion("babyUid not between", value1, value2, "babyUid");
            return (Criteria) this;
        }

        public Criteria andBabyNickNameIsNull() {
            addCriterion("babyNickName is null");
            return (Criteria) this;
        }

        public Criteria andBabyNickNameIsNotNull() {
            addCriterion("babyNickName is not null");
            return (Criteria) this;
        }

        public Criteria andBabyNickNameEqualTo(String value) {
            addCriterion("babyNickName =", value, "babyNickName");
            return (Criteria) this;
        }

        public Criteria andBabyNickNameNotEqualTo(String value) {
            addCriterion("babyNickName <>", value, "babyNickName");
            return (Criteria) this;
        }

        public Criteria andBabyNickNameGreaterThan(String value) {
            addCriterion("babyNickName >", value, "babyNickName");
            return (Criteria) this;
        }

        public Criteria andBabyNickNameGreaterThanOrEqualTo(String value) {
            addCriterion("babyNickName >=", value, "babyNickName");
            return (Criteria) this;
        }

        public Criteria andBabyNickNameLessThan(String value) {
            addCriterion("babyNickName <", value, "babyNickName");
            return (Criteria) this;
        }

        public Criteria andBabyNickNameLessThanOrEqualTo(String value) {
            addCriterion("babyNickName <=", value, "babyNickName");
            return (Criteria) this;
        }

        public Criteria andBabyNickNameLike(String value) {
            addCriterion("babyNickName like", value, "babyNickName");
            return (Criteria) this;
        }

        public Criteria andBabyNickNameNotLike(String value) {
            addCriterion("babyNickName not like", value, "babyNickName");
            return (Criteria) this;
        }

        public Criteria andBabyNickNameIn(List<String> values) {
            addCriterion("babyNickName in", values, "babyNickName");
            return (Criteria) this;
        }

        public Criteria andBabyNickNameNotIn(List<String> values) {
            addCriterion("babyNickName not in", values, "babyNickName");
            return (Criteria) this;
        }

        public Criteria andBabyNickNameBetween(String value1, String value2) {
            addCriterion("babyNickName between", value1, value2, "babyNickName");
            return (Criteria) this;
        }

        public Criteria andBabyNickNameNotBetween(String value1, String value2) {
            addCriterion("babyNickName not between", value1, value2, "babyNickName");
            return (Criteria) this;
        }

        public Criteria andBabyYYIsNull() {
            addCriterion("babyYY is null");
            return (Criteria) this;
        }

        public Criteria andBabyYYIsNotNull() {
            addCriterion("babyYY is not null");
            return (Criteria) this;
        }

        public Criteria andBabyYYEqualTo(Long value) {
            addCriterion("babyYY =", value, "babyYY");
            return (Criteria) this;
        }

        public Criteria andBabyYYNotEqualTo(Long value) {
            addCriterion("babyYY <>", value, "babyYY");
            return (Criteria) this;
        }

        public Criteria andBabyYYGreaterThan(Long value) {
            addCriterion("babyYY >", value, "babyYY");
            return (Criteria) this;
        }

        public Criteria andBabyYYGreaterThanOrEqualTo(Long value) {
            addCriterion("babyYY >=", value, "babyYY");
            return (Criteria) this;
        }

        public Criteria andBabyYYLessThan(Long value) {
            addCriterion("babyYY <", value, "babyYY");
            return (Criteria) this;
        }

        public Criteria andBabyYYLessThanOrEqualTo(Long value) {
            addCriterion("babyYY <=", value, "babyYY");
            return (Criteria) this;
        }

        public Criteria andBabyYYIn(List<Long> values) {
            addCriterion("babyYY in", values, "babyYY");
            return (Criteria) this;
        }

        public Criteria andBabyYYNotIn(List<Long> values) {
            addCriterion("babyYY not in", values, "babyYY");
            return (Criteria) this;
        }

        public Criteria andBabyYYBetween(Long value1, Long value2) {
            addCriterion("babyYY between", value1, value2, "babyYY");
            return (Criteria) this;
        }

        public Criteria andBabyYYNotBetween(Long value1, Long value2) {
            addCriterion("babyYY not between", value1, value2, "babyYY");
            return (Criteria) this;
        }

        public Criteria andBabyIntimacyIsNull() {
            addCriterion("babyIntimacy is null");
            return (Criteria) this;
        }

        public Criteria andBabyIntimacyIsNotNull() {
            addCriterion("babyIntimacy is not null");
            return (Criteria) this;
        }

        public Criteria andBabyIntimacyEqualTo(Long value) {
            addCriterion("babyIntimacy =", value, "babyIntimacy");
            return (Criteria) this;
        }

        public Criteria andBabyIntimacyNotEqualTo(Long value) {
            addCriterion("babyIntimacy <>", value, "babyIntimacy");
            return (Criteria) this;
        }

        public Criteria andBabyIntimacyGreaterThan(Long value) {
            addCriterion("babyIntimacy >", value, "babyIntimacy");
            return (Criteria) this;
        }

        public Criteria andBabyIntimacyGreaterThanOrEqualTo(Long value) {
            addCriterion("babyIntimacy >=", value, "babyIntimacy");
            return (Criteria) this;
        }

        public Criteria andBabyIntimacyLessThan(Long value) {
            addCriterion("babyIntimacy <", value, "babyIntimacy");
            return (Criteria) this;
        }

        public Criteria andBabyIntimacyLessThanOrEqualTo(Long value) {
            addCriterion("babyIntimacy <=", value, "babyIntimacy");
            return (Criteria) this;
        }

        public Criteria andBabyIntimacyIn(List<Long> values) {
            addCriterion("babyIntimacy in", values, "babyIntimacy");
            return (Criteria) this;
        }

        public Criteria andBabyIntimacyNotIn(List<Long> values) {
            addCriterion("babyIntimacy not in", values, "babyIntimacy");
            return (Criteria) this;
        }

        public Criteria andBabyIntimacyBetween(Long value1, Long value2) {
            addCriterion("babyIntimacy between", value1, value2, "babyIntimacy");
            return (Criteria) this;
        }

        public Criteria andBabyIntimacyNotBetween(Long value1, Long value2) {
            addCriterion("babyIntimacy not between", value1, value2, "babyIntimacy");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table master_baby
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table master_baby
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}