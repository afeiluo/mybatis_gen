package com.afeiluo.cook.entity;

import java.util.ArrayList;
import java.util.List;

public class DishDesCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dish_des
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dish_des
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dish_des
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish_des
     *
     * @mbggenerated
     */
    public DishDesCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish_des
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish_des
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish_des
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish_des
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish_des
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish_des
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish_des
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish_des
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish_des
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish_des
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dish_des
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDishIdIsNull() {
            addCriterion("dishId is null");
            return (Criteria) this;
        }

        public Criteria andDishIdIsNotNull() {
            addCriterion("dishId is not null");
            return (Criteria) this;
        }

        public Criteria andDishIdEqualTo(Integer value) {
            addCriterion("dishId =", value, "dishId");
            return (Criteria) this;
        }

        public Criteria andDishIdNotEqualTo(Integer value) {
            addCriterion("dishId <>", value, "dishId");
            return (Criteria) this;
        }

        public Criteria andDishIdGreaterThan(Integer value) {
            addCriterion("dishId >", value, "dishId");
            return (Criteria) this;
        }

        public Criteria andDishIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("dishId >=", value, "dishId");
            return (Criteria) this;
        }

        public Criteria andDishIdLessThan(Integer value) {
            addCriterion("dishId <", value, "dishId");
            return (Criteria) this;
        }

        public Criteria andDishIdLessThanOrEqualTo(Integer value) {
            addCriterion("dishId <=", value, "dishId");
            return (Criteria) this;
        }

        public Criteria andDishIdIn(List<Integer> values) {
            addCriterion("dishId in", values, "dishId");
            return (Criteria) this;
        }

        public Criteria andDishIdNotIn(List<Integer> values) {
            addCriterion("dishId not in", values, "dishId");
            return (Criteria) this;
        }

        public Criteria andDishIdBetween(Integer value1, Integer value2) {
            addCriterion("dishId between", value1, value2, "dishId");
            return (Criteria) this;
        }

        public Criteria andDishIdNotBetween(Integer value1, Integer value2) {
            addCriterion("dishId not between", value1, value2, "dishId");
            return (Criteria) this;
        }

        public Criteria andDishToolsIsNull() {
            addCriterion("dishTools is null");
            return (Criteria) this;
        }

        public Criteria andDishToolsIsNotNull() {
            addCriterion("dishTools is not null");
            return (Criteria) this;
        }

        public Criteria andDishToolsEqualTo(String value) {
            addCriterion("dishTools =", value, "dishTools");
            return (Criteria) this;
        }

        public Criteria andDishToolsNotEqualTo(String value) {
            addCriterion("dishTools <>", value, "dishTools");
            return (Criteria) this;
        }

        public Criteria andDishToolsGreaterThan(String value) {
            addCriterion("dishTools >", value, "dishTools");
            return (Criteria) this;
        }

        public Criteria andDishToolsGreaterThanOrEqualTo(String value) {
            addCriterion("dishTools >=", value, "dishTools");
            return (Criteria) this;
        }

        public Criteria andDishToolsLessThan(String value) {
            addCriterion("dishTools <", value, "dishTools");
            return (Criteria) this;
        }

        public Criteria andDishToolsLessThanOrEqualTo(String value) {
            addCriterion("dishTools <=", value, "dishTools");
            return (Criteria) this;
        }

        public Criteria andDishToolsLike(String value) {
            addCriterion("dishTools like", value, "dishTools");
            return (Criteria) this;
        }

        public Criteria andDishToolsNotLike(String value) {
            addCriterion("dishTools not like", value, "dishTools");
            return (Criteria) this;
        }

        public Criteria andDishToolsIn(List<String> values) {
            addCriterion("dishTools in", values, "dishTools");
            return (Criteria) this;
        }

        public Criteria andDishToolsNotIn(List<String> values) {
            addCriterion("dishTools not in", values, "dishTools");
            return (Criteria) this;
        }

        public Criteria andDishToolsBetween(String value1, String value2) {
            addCriterion("dishTools between", value1, value2, "dishTools");
            return (Criteria) this;
        }

        public Criteria andDishToolsNotBetween(String value1, String value2) {
            addCriterion("dishTools not between", value1, value2, "dishTools");
            return (Criteria) this;
        }

        public Criteria andDishEnvIsNull() {
            addCriterion("dishEnv is null");
            return (Criteria) this;
        }

        public Criteria andDishEnvIsNotNull() {
            addCriterion("dishEnv is not null");
            return (Criteria) this;
        }

        public Criteria andDishEnvEqualTo(String value) {
            addCriterion("dishEnv =", value, "dishEnv");
            return (Criteria) this;
        }

        public Criteria andDishEnvNotEqualTo(String value) {
            addCriterion("dishEnv <>", value, "dishEnv");
            return (Criteria) this;
        }

        public Criteria andDishEnvGreaterThan(String value) {
            addCriterion("dishEnv >", value, "dishEnv");
            return (Criteria) this;
        }

        public Criteria andDishEnvGreaterThanOrEqualTo(String value) {
            addCriterion("dishEnv >=", value, "dishEnv");
            return (Criteria) this;
        }

        public Criteria andDishEnvLessThan(String value) {
            addCriterion("dishEnv <", value, "dishEnv");
            return (Criteria) this;
        }

        public Criteria andDishEnvLessThanOrEqualTo(String value) {
            addCriterion("dishEnv <=", value, "dishEnv");
            return (Criteria) this;
        }

        public Criteria andDishEnvLike(String value) {
            addCriterion("dishEnv like", value, "dishEnv");
            return (Criteria) this;
        }

        public Criteria andDishEnvNotLike(String value) {
            addCriterion("dishEnv not like", value, "dishEnv");
            return (Criteria) this;
        }

        public Criteria andDishEnvIn(List<String> values) {
            addCriterion("dishEnv in", values, "dishEnv");
            return (Criteria) this;
        }

        public Criteria andDishEnvNotIn(List<String> values) {
            addCriterion("dishEnv not in", values, "dishEnv");
            return (Criteria) this;
        }

        public Criteria andDishEnvBetween(String value1, String value2) {
            addCriterion("dishEnv between", value1, value2, "dishEnv");
            return (Criteria) this;
        }

        public Criteria andDishEnvNotBetween(String value1, String value2) {
            addCriterion("dishEnv not between", value1, value2, "dishEnv");
            return (Criteria) this;
        }

        public Criteria andDishTipsIsNull() {
            addCriterion("dishTips is null");
            return (Criteria) this;
        }

        public Criteria andDishTipsIsNotNull() {
            addCriterion("dishTips is not null");
            return (Criteria) this;
        }

        public Criteria andDishTipsEqualTo(String value) {
            addCriterion("dishTips =", value, "dishTips");
            return (Criteria) this;
        }

        public Criteria andDishTipsNotEqualTo(String value) {
            addCriterion("dishTips <>", value, "dishTips");
            return (Criteria) this;
        }

        public Criteria andDishTipsGreaterThan(String value) {
            addCriterion("dishTips >", value, "dishTips");
            return (Criteria) this;
        }

        public Criteria andDishTipsGreaterThanOrEqualTo(String value) {
            addCriterion("dishTips >=", value, "dishTips");
            return (Criteria) this;
        }

        public Criteria andDishTipsLessThan(String value) {
            addCriterion("dishTips <", value, "dishTips");
            return (Criteria) this;
        }

        public Criteria andDishTipsLessThanOrEqualTo(String value) {
            addCriterion("dishTips <=", value, "dishTips");
            return (Criteria) this;
        }

        public Criteria andDishTipsLike(String value) {
            addCriterion("dishTips like", value, "dishTips");
            return (Criteria) this;
        }

        public Criteria andDishTipsNotLike(String value) {
            addCriterion("dishTips not like", value, "dishTips");
            return (Criteria) this;
        }

        public Criteria andDishTipsIn(List<String> values) {
            addCriterion("dishTips in", values, "dishTips");
            return (Criteria) this;
        }

        public Criteria andDishTipsNotIn(List<String> values) {
            addCriterion("dishTips not in", values, "dishTips");
            return (Criteria) this;
        }

        public Criteria andDishTipsBetween(String value1, String value2) {
            addCriterion("dishTips between", value1, value2, "dishTips");
            return (Criteria) this;
        }

        public Criteria andDishTipsNotBetween(String value1, String value2) {
            addCriterion("dishTips not between", value1, value2, "dishTips");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dish_des
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dish_des
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}