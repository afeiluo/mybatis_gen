package com.afeiluo.cook.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class DishCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dish
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dish
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dish
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish
     *
     * @mbggenerated
     */
    public DishCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dish
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dish
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andDesIsNull() {
            addCriterion("des is null");
            return (Criteria) this;
        }

        public Criteria andDesIsNotNull() {
            addCriterion("des is not null");
            return (Criteria) this;
        }

        public Criteria andDesEqualTo(String value) {
            addCriterion("des =", value, "des");
            return (Criteria) this;
        }

        public Criteria andDesNotEqualTo(String value) {
            addCriterion("des <>", value, "des");
            return (Criteria) this;
        }

        public Criteria andDesGreaterThan(String value) {
            addCriterion("des >", value, "des");
            return (Criteria) this;
        }

        public Criteria andDesGreaterThanOrEqualTo(String value) {
            addCriterion("des >=", value, "des");
            return (Criteria) this;
        }

        public Criteria andDesLessThan(String value) {
            addCriterion("des <", value, "des");
            return (Criteria) this;
        }

        public Criteria andDesLessThanOrEqualTo(String value) {
            addCriterion("des <=", value, "des");
            return (Criteria) this;
        }

        public Criteria andDesLike(String value) {
            addCriterion("des like", value, "des");
            return (Criteria) this;
        }

        public Criteria andDesNotLike(String value) {
            addCriterion("des not like", value, "des");
            return (Criteria) this;
        }

        public Criteria andDesIn(List<String> values) {
            addCriterion("des in", values, "des");
            return (Criteria) this;
        }

        public Criteria andDesNotIn(List<String> values) {
            addCriterion("des not in", values, "des");
            return (Criteria) this;
        }

        public Criteria andDesBetween(String value1, String value2) {
            addCriterion("des between", value1, value2, "des");
            return (Criteria) this;
        }

        public Criteria andDesNotBetween(String value1, String value2) {
            addCriterion("des not between", value1, value2, "des");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("userId is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("userId is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("userId =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("userId <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("userId >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("userId >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("userId <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("userId <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("userId in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("userId not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("userId between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("userId not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andCoverIconIsNull() {
            addCriterion("coverIcon is null");
            return (Criteria) this;
        }

        public Criteria andCoverIconIsNotNull() {
            addCriterion("coverIcon is not null");
            return (Criteria) this;
        }

        public Criteria andCoverIconEqualTo(String value) {
            addCriterion("coverIcon =", value, "coverIcon");
            return (Criteria) this;
        }

        public Criteria andCoverIconNotEqualTo(String value) {
            addCriterion("coverIcon <>", value, "coverIcon");
            return (Criteria) this;
        }

        public Criteria andCoverIconGreaterThan(String value) {
            addCriterion("coverIcon >", value, "coverIcon");
            return (Criteria) this;
        }

        public Criteria andCoverIconGreaterThanOrEqualTo(String value) {
            addCriterion("coverIcon >=", value, "coverIcon");
            return (Criteria) this;
        }

        public Criteria andCoverIconLessThan(String value) {
            addCriterion("coverIcon <", value, "coverIcon");
            return (Criteria) this;
        }

        public Criteria andCoverIconLessThanOrEqualTo(String value) {
            addCriterion("coverIcon <=", value, "coverIcon");
            return (Criteria) this;
        }

        public Criteria andCoverIconLike(String value) {
            addCriterion("coverIcon like", value, "coverIcon");
            return (Criteria) this;
        }

        public Criteria andCoverIconNotLike(String value) {
            addCriterion("coverIcon not like", value, "coverIcon");
            return (Criteria) this;
        }

        public Criteria andCoverIconIn(List<String> values) {
            addCriterion("coverIcon in", values, "coverIcon");
            return (Criteria) this;
        }

        public Criteria andCoverIconNotIn(List<String> values) {
            addCriterion("coverIcon not in", values, "coverIcon");
            return (Criteria) this;
        }

        public Criteria andCoverIconBetween(String value1, String value2) {
            addCriterion("coverIcon between", value1, value2, "coverIcon");
            return (Criteria) this;
        }

        public Criteria andCoverIconNotBetween(String value1, String value2) {
            addCriterion("coverIcon not between", value1, value2, "coverIcon");
            return (Criteria) this;
        }

        public Criteria andPointXIsNull() {
            addCriterion("pointX is null");
            return (Criteria) this;
        }

        public Criteria andPointXIsNotNull() {
            addCriterion("pointX is not null");
            return (Criteria) this;
        }

        public Criteria andPointXEqualTo(Double value) {
            addCriterion("pointX =", value, "pointX");
            return (Criteria) this;
        }

        public Criteria andPointXNotEqualTo(Double value) {
            addCriterion("pointX <>", value, "pointX");
            return (Criteria) this;
        }

        public Criteria andPointXGreaterThan(Double value) {
            addCriterion("pointX >", value, "pointX");
            return (Criteria) this;
        }

        public Criteria andPointXGreaterThanOrEqualTo(Double value) {
            addCriterion("pointX >=", value, "pointX");
            return (Criteria) this;
        }

        public Criteria andPointXLessThan(Double value) {
            addCriterion("pointX <", value, "pointX");
            return (Criteria) this;
        }

        public Criteria andPointXLessThanOrEqualTo(Double value) {
            addCriterion("pointX <=", value, "pointX");
            return (Criteria) this;
        }

        public Criteria andPointXIn(List<Double> values) {
            addCriterion("pointX in", values, "pointX");
            return (Criteria) this;
        }

        public Criteria andPointXNotIn(List<Double> values) {
            addCriterion("pointX not in", values, "pointX");
            return (Criteria) this;
        }

        public Criteria andPointXBetween(Double value1, Double value2) {
            addCriterion("pointX between", value1, value2, "pointX");
            return (Criteria) this;
        }

        public Criteria andPointXNotBetween(Double value1, Double value2) {
            addCriterion("pointX not between", value1, value2, "pointX");
            return (Criteria) this;
        }

        public Criteria andPointYIsNull() {
            addCriterion("pointY is null");
            return (Criteria) this;
        }

        public Criteria andPointYIsNotNull() {
            addCriterion("pointY is not null");
            return (Criteria) this;
        }

        public Criteria andPointYEqualTo(Double value) {
            addCriterion("pointY =", value, "pointY");
            return (Criteria) this;
        }

        public Criteria andPointYNotEqualTo(Double value) {
            addCriterion("pointY <>", value, "pointY");
            return (Criteria) this;
        }

        public Criteria andPointYGreaterThan(Double value) {
            addCriterion("pointY >", value, "pointY");
            return (Criteria) this;
        }

        public Criteria andPointYGreaterThanOrEqualTo(Double value) {
            addCriterion("pointY >=", value, "pointY");
            return (Criteria) this;
        }

        public Criteria andPointYLessThan(Double value) {
            addCriterion("pointY <", value, "pointY");
            return (Criteria) this;
        }

        public Criteria andPointYLessThanOrEqualTo(Double value) {
            addCriterion("pointY <=", value, "pointY");
            return (Criteria) this;
        }

        public Criteria andPointYIn(List<Double> values) {
            addCriterion("pointY in", values, "pointY");
            return (Criteria) this;
        }

        public Criteria andPointYNotIn(List<Double> values) {
            addCriterion("pointY not in", values, "pointY");
            return (Criteria) this;
        }

        public Criteria andPointYBetween(Double value1, Double value2) {
            addCriterion("pointY between", value1, value2, "pointY");
            return (Criteria) this;
        }

        public Criteria andPointYNotBetween(Double value1, Double value2) {
            addCriterion("pointY not between", value1, value2, "pointY");
            return (Criteria) this;
        }

        public Criteria andScoreIsNull() {
            addCriterion("score is null");
            return (Criteria) this;
        }

        public Criteria andScoreIsNotNull() {
            addCriterion("score is not null");
            return (Criteria) this;
        }

        public Criteria andScoreEqualTo(Integer value) {
            addCriterion("score =", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotEqualTo(Integer value) {
            addCriterion("score <>", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThan(Integer value) {
            addCriterion("score >", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("score >=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThan(Integer value) {
            addCriterion("score <", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThanOrEqualTo(Integer value) {
            addCriterion("score <=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreIn(List<Integer> values) {
            addCriterion("score in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotIn(List<Integer> values) {
            addCriterion("score not in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreBetween(Integer value1, Integer value2) {
            addCriterion("score between", value1, value2, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("score not between", value1, value2, "score");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("createTime is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("createTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("createTime =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("createTime <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("createTime >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createTime >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("createTime <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("createTime <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("createTime in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("createTime not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("createTime between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("createTime not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andInterviewIsNull() {
            addCriterion("interview is null");
            return (Criteria) this;
        }

        public Criteria andInterviewIsNotNull() {
            addCriterion("interview is not null");
            return (Criteria) this;
        }

        public Criteria andInterviewEqualTo(String value) {
            addCriterion("interview =", value, "interview");
            return (Criteria) this;
        }

        public Criteria andInterviewNotEqualTo(String value) {
            addCriterion("interview <>", value, "interview");
            return (Criteria) this;
        }

        public Criteria andInterviewGreaterThan(String value) {
            addCriterion("interview >", value, "interview");
            return (Criteria) this;
        }

        public Criteria andInterviewGreaterThanOrEqualTo(String value) {
            addCriterion("interview >=", value, "interview");
            return (Criteria) this;
        }

        public Criteria andInterviewLessThan(String value) {
            addCriterion("interview <", value, "interview");
            return (Criteria) this;
        }

        public Criteria andInterviewLessThanOrEqualTo(String value) {
            addCriterion("interview <=", value, "interview");
            return (Criteria) this;
        }

        public Criteria andInterviewLike(String value) {
            addCriterion("interview like", value, "interview");
            return (Criteria) this;
        }

        public Criteria andInterviewNotLike(String value) {
            addCriterion("interview not like", value, "interview");
            return (Criteria) this;
        }

        public Criteria andInterviewIn(List<String> values) {
            addCriterion("interview in", values, "interview");
            return (Criteria) this;
        }

        public Criteria andInterviewNotIn(List<String> values) {
            addCriterion("interview not in", values, "interview");
            return (Criteria) this;
        }

        public Criteria andInterviewBetween(String value1, String value2) {
            addCriterion("interview between", value1, value2, "interview");
            return (Criteria) this;
        }

        public Criteria andInterviewNotBetween(String value1, String value2) {
            addCriterion("interview not between", value1, value2, "interview");
            return (Criteria) this;
        }

        public Criteria andStoryIsNull() {
            addCriterion("story is null");
            return (Criteria) this;
        }

        public Criteria andStoryIsNotNull() {
            addCriterion("story is not null");
            return (Criteria) this;
        }

        public Criteria andStoryEqualTo(String value) {
            addCriterion("story =", value, "story");
            return (Criteria) this;
        }

        public Criteria andStoryNotEqualTo(String value) {
            addCriterion("story <>", value, "story");
            return (Criteria) this;
        }

        public Criteria andStoryGreaterThan(String value) {
            addCriterion("story >", value, "story");
            return (Criteria) this;
        }

        public Criteria andStoryGreaterThanOrEqualTo(String value) {
            addCriterion("story >=", value, "story");
            return (Criteria) this;
        }

        public Criteria andStoryLessThan(String value) {
            addCriterion("story <", value, "story");
            return (Criteria) this;
        }

        public Criteria andStoryLessThanOrEqualTo(String value) {
            addCriterion("story <=", value, "story");
            return (Criteria) this;
        }

        public Criteria andStoryLike(String value) {
            addCriterion("story like", value, "story");
            return (Criteria) this;
        }

        public Criteria andStoryNotLike(String value) {
            addCriterion("story not like", value, "story");
            return (Criteria) this;
        }

        public Criteria andStoryIn(List<String> values) {
            addCriterion("story in", values, "story");
            return (Criteria) this;
        }

        public Criteria andStoryNotIn(List<String> values) {
            addCriterion("story not in", values, "story");
            return (Criteria) this;
        }

        public Criteria andStoryBetween(String value1, String value2) {
            addCriterion("story between", value1, value2, "story");
            return (Criteria) this;
        }

        public Criteria andStoryNotBetween(String value1, String value2) {
            addCriterion("story not between", value1, value2, "story");
            return (Criteria) this;
        }

        public Criteria andFeelingsIsNull() {
            addCriterion("feelings is null");
            return (Criteria) this;
        }

        public Criteria andFeelingsIsNotNull() {
            addCriterion("feelings is not null");
            return (Criteria) this;
        }

        public Criteria andFeelingsEqualTo(String value) {
            addCriterion("feelings =", value, "feelings");
            return (Criteria) this;
        }

        public Criteria andFeelingsNotEqualTo(String value) {
            addCriterion("feelings <>", value, "feelings");
            return (Criteria) this;
        }

        public Criteria andFeelingsGreaterThan(String value) {
            addCriterion("feelings >", value, "feelings");
            return (Criteria) this;
        }

        public Criteria andFeelingsGreaterThanOrEqualTo(String value) {
            addCriterion("feelings >=", value, "feelings");
            return (Criteria) this;
        }

        public Criteria andFeelingsLessThan(String value) {
            addCriterion("feelings <", value, "feelings");
            return (Criteria) this;
        }

        public Criteria andFeelingsLessThanOrEqualTo(String value) {
            addCriterion("feelings <=", value, "feelings");
            return (Criteria) this;
        }

        public Criteria andFeelingsLike(String value) {
            addCriterion("feelings like", value, "feelings");
            return (Criteria) this;
        }

        public Criteria andFeelingsNotLike(String value) {
            addCriterion("feelings not like", value, "feelings");
            return (Criteria) this;
        }

        public Criteria andFeelingsIn(List<String> values) {
            addCriterion("feelings in", values, "feelings");
            return (Criteria) this;
        }

        public Criteria andFeelingsNotIn(List<String> values) {
            addCriterion("feelings not in", values, "feelings");
            return (Criteria) this;
        }

        public Criteria andFeelingsBetween(String value1, String value2) {
            addCriterion("feelings between", value1, value2, "feelings");
            return (Criteria) this;
        }

        public Criteria andFeelingsNotBetween(String value1, String value2) {
            addCriterion("feelings not between", value1, value2, "feelings");
            return (Criteria) this;
        }

        public Criteria andIsKitchGodIsNull() {
            addCriterion("isKitchGod is null");
            return (Criteria) this;
        }

        public Criteria andIsKitchGodIsNotNull() {
            addCriterion("isKitchGod is not null");
            return (Criteria) this;
        }

        public Criteria andIsKitchGodEqualTo(Integer value) {
            addCriterion("isKitchGod =", value, "isKitchGod");
            return (Criteria) this;
        }

        public Criteria andIsKitchGodNotEqualTo(Integer value) {
            addCriterion("isKitchGod <>", value, "isKitchGod");
            return (Criteria) this;
        }

        public Criteria andIsKitchGodGreaterThan(Integer value) {
            addCriterion("isKitchGod >", value, "isKitchGod");
            return (Criteria) this;
        }

        public Criteria andIsKitchGodGreaterThanOrEqualTo(Integer value) {
            addCriterion("isKitchGod >=", value, "isKitchGod");
            return (Criteria) this;
        }

        public Criteria andIsKitchGodLessThan(Integer value) {
            addCriterion("isKitchGod <", value, "isKitchGod");
            return (Criteria) this;
        }

        public Criteria andIsKitchGodLessThanOrEqualTo(Integer value) {
            addCriterion("isKitchGod <=", value, "isKitchGod");
            return (Criteria) this;
        }

        public Criteria andIsKitchGodIn(List<Integer> values) {
            addCriterion("isKitchGod in", values, "isKitchGod");
            return (Criteria) this;
        }

        public Criteria andIsKitchGodNotIn(List<Integer> values) {
            addCriterion("isKitchGod not in", values, "isKitchGod");
            return (Criteria) this;
        }

        public Criteria andIsKitchGodBetween(Integer value1, Integer value2) {
            addCriterion("isKitchGod between", value1, value2, "isKitchGod");
            return (Criteria) this;
        }

        public Criteria andIsKitchGodNotBetween(Integer value1, Integer value2) {
            addCriterion("isKitchGod not between", value1, value2, "isKitchGod");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dish
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dish
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}